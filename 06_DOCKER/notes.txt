docker --version // Check if Docker is installed

docker run hello-world // Run the "hello-world" image

docker images // List available images
docker rmi <image_id> // Remove an image

docker ps // List running containers
docker ps -a // List all containers, including stopped ones
docker stop <container_id> // Stop a running container
docker start <container_id> // Start a stopped container
docker rm <container_id> // Remove a stopped container
docker rm -f <container_id> // Forcefully remove a running container

docker pull <image_name> // Pull an image
docker build -t <image_name> . // Build an image
docker tag <image_name> <new_image_name> // Tag an image
docker push <image_name> // Push an image

docker volume create <volume_name> // Create a volume
docker volume ls // List available volumes
docker volume rm <volume_name> // Remove a volume

docker network create <network_name> // Create a network
docker network ls // List available networks
docker network rm <network_name> // Remove a network

docker container create --name <container_name> <image_name> // Create a container
docker container ls // List running containers
docker container ls -a // List all containers, including stopped ones
docker container stop <container_name> // Stop a running container
docker container start <container_name> // Start a stopped container
docker container rm <container_name> // Remove a stopped container
docker container rm -f <container_name> // Forcefully remove a running container

docker login // Login to Docker Hub
docker logout // Logout from Docker Hub

docker system prune -a // Remove all unused containers, images, and volumes

docker run -d -p 80:80 --name <container_name> <image_name> // Run a container in the background
docker run -it --name <container_name> <image_name> // Run a container in the foreground

// Run a container in the background and sync a folder
docker run -d -p port_of_host:port_of_container --name <container_name> -v <host_path>:<container_path> <image_name> 

docker inspect <container_id> // Inspect a container
docker exec -it <container_id> bash // Execute a command in a container

docker logs <container_id> // View the logs of a container

docker cp <file_path> <container_id>:<destination_path> // Copy a file to a container
docker cp <container_id>:<source_path> <file_path> // Copy a file from a container

docker service create --name <service_name> <image_name> // Create a service
docker service ls // List available services
docker service rm <service_name> // Remove a service

docker swarm init // Initialize a swarm
docker swarm join-token manager // Generate manager join token
docker swarm join-token worker // Generate worker join token

docker stack create <stack_name> // Create a stack
docker stack ls // List available stacks
docker stack rm <stack_name> // Remove a stack

docker compose up // Start a stack

